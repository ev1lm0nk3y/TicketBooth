version: '3'

services:
  rails:
    build:
      args:
        ruby_version: ${RUBY_VERSION}
      context: .
      dockerfile: Dockerfile
    command: bundle exec puma --bind=tcp://0.0.0.0:${PORT} --config config/puma.rb
    environment:
      - DB_HOST
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - RACK_ENV
    networks:
      - helpingculture
    ports:
      - '${PORT}:${PORT}'
    volumes:
      - '.:/app'
      - 'gems_data:/usr/local/bundle'
    working_dir: /app

  nginx:
    image: linuxserver/letsencrypt
    cap_add:
      - NET_ADMIN
    environment:
      - SUBDOMAINS
      - URL
      - VALIDATION
      - DNSPLUGIN
      - EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_TOKEN
      - CLOUDFLARE_EMAIL
    networks:
      - helpingculture
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - './config/nginx-site.conf:/config/nginx/site-confs/default'

  postgres:
    image: 'postgres:${POSTGRES_VERSION}-alpine'
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    networks:
      - helpingculture
    ports:
      - '5432:5432'
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'

  terraform:
    build:
      args:
        terraform_version: ${TERRAFORM_VERSION}
        vultr_plugin_version: ${VULTR_PLUGIN_VERSION}
      context: .
      dockerfile: Dockerfile-terraform
    environment:
      - TFE_HOSTNAME
      - TFE_TOKEN
      - TFE_ORGANIZATION
      - TFE_WORKSPACE
      - TF_VAR_root_ssh_public_key
      - VULTR_API_KEY
    volumes:
      - terraform_data:/root/.terraform
      - ./terraform:/config
    working_dir: /config

networks:
  helpingculture:

# Define names of volumes that you want to be preserved between container restarts.
# These are referenced above in the `volumes` section of the service.
volumes:
  gems_data:
  postgres_data:
  terraform_data:
