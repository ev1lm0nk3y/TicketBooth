# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "TicketBooth CI: Ruby on Rails"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: "trust"

      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://postgres:password@localhost:5432/tickets_test"
    steps:
      - run: sudo apt-get -yqq install libpq-dev
      - uses: niden/actions-memcached@v7

      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.3'
          bundler-cache: true

      - name: Set up database schema
        run: bin/rails db:schema:load

      - name: Run tests
        run: bundle exec rspec

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.3'
          bundler-cache: true

      - name: RuboCop
        run: bin/rubocop --parallel
