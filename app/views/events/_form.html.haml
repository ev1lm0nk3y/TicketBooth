= form_for @event, html: { multipart: true } do |f|
  = render 'shared/form_errors', resource: @event

  %fieldset
    %legend Event Details
    = f.label :name, 'Event Name'
    = f.text_field :name, class: 'input-large', required: true,
      maxlength: Event::MAX_NAME_LENGTH

    = f.label :start_time, 'Start Time'
    = datetimepicker(:start_time, @event.start_time || 1.day.from_now.beginning_of_day)

    = f.label :end_time, 'End Time'
    = datetimepicker(:end_time, @event.end_time || 1.day.from_now.beginning_of_day)

  %fieldset
    %legend Ticket Details
    = f.label :tickets_require_approval, class: 'checkbox' do
      = f.check_box :tickets_require_approval
      Ticket Requests Require Approval
      %p.muted
        Select if you want to manually approve all requests before allowing
        ticket to be purchased.

    = f.label :require_mailing_address, class: 'checkbox' do
      = f.check_box :require_mailing_address
      Mailing Address Required
      %p.muted
        Check if you want to collect mailing addresses for mailing tickets.

    = f.label :adult_ticket_price, 'Adult Ticket Price ($)'
    = f.number_field :adult_ticket_price, class: 'input-small', required: true,
      min: 0

    = f.label :max_adult_tickets_per_request do
      Maximum number of adult tickets allowed per ticket request?
      %p.muted Leave blank for no limit
    = f.number_field :max_adult_tickets_per_request, class: 'input-mini', min: 1

    = f.label :kid_ticket_price do
      Kid Ticket Price ($)
      %p.muted Keep blank if you want to sell only adult tickets
    = f.number_field :kid_ticket_price, class: 'input-small', min: 0

    = f.label :max_kid_tickets_per_request do
      Maximum number of kid tickets allowed per ticket request?
      %p.muted Leave blank for no limit
    = f.number_field :max_kid_tickets_per_request, class: 'input-mini', min: 1

    = f.label :max_cabin_requests do
      Maximum number of cabins that can be requested in total
      %p.muted
        Once more than this number of cabins is requested, subsequent ticket
        requesters will not have the option to request cabins. You'll probably
        want to set this value to be a little bit higher than the actual number
        of cabins at your site, and then manually email the few individuals who
        requested a cabin but won't get one. Leave blank for no limit (probably
        not a good idea).
    = f.number_field :max_cabin_requests, class: 'input-mini', min: 1

    = f.label :cabin_price do
      Cabin Price ($)
      %p.muted Keep blank if there are no cabins or you aren't charging separately for them
    = f.number_field :cabin_price, class: 'input-small', min: 0

    = f.label :max_cabins_per_request do
      Maximum number of cabins allowed per ticket request?
      %p.muted Leave blank for no limit
    = f.number_field :max_cabins_per_request, class: 'input-mini', min: 1

  %fieldset
    %legend Photos and Media
    = f.label :photo do
      Event Photo
      %p.muted A photo or logo that represents this event.
      = image_tag @event.photo_url(:jumbo) if @event.photo?
    = f.file_field :photo
    = f.hidden_field :photo_cache

  = f.submit class: 'btn btn-primary btn-large'
