- form_action_name = action_name == 'edit' ? :update : :create
= form_for @ticket_request,
           url: { controller: :ticket_requests, action: form_action_name } do |f|
  = render 'shared/form_errors', resource: @ticket_request

  = f.hidden_field :event_id, value: @event.id

  - if @user
    %h3 Ticket Request for #{@user.name}
    = f.hidden_field :user_id, value: @user.id
  - else
    %p
      Already requested a ticket?
      = link_to 'Sign in', new_user_session_path
    = label_tag :name, 'Name'
    = text_field_tag :name, nil, class: 'input-xlarge',
      maxlength: User::MAX_NAME_LENGTH, required: true,
      placeholder: 'First and last name'

    = label_tag :email, 'Email'
    %p.muted
      You will use this email to sign in to your account when your tickets are ready
      to be purchased.
    = email_field_tag :email, nil, class: 'input-xlarge',
      maxlength: User::MAX_EMAIL_LENGTH, required: true,
      placeholder: 'email@example.com'

    = label_tag :password, 'Password'
    = password_field_tag :password, nil,
      placeholder: 'Must be at least 8 characters', required: true,
      maxlength: User::MAX_PASSWORD_LENGTH, class: 'input-xlarge'

    = label_tag :password_confirmation, 'Confirm Password'
    = password_field_tag :password_confirmation, nil, placeholder: '',
      maxlength: User::MAX_PASSWORD_LENGTH, required: true, class: 'input-xlarge'

  - if signed_in? && @event.admin?(current_user)
    .well
      = f.label :special_price, 'Special Ticket Price ($)'
      %p.text-error
        Editable by event admins only. Leave blank to use default price.
      = f.number_field :special_price, class: 'input-small', min: 0

  = f.label :adults, 'Number of adults in your group (including you)'
  = f.number_field :adults, class: 'input-mini', min: 1,
    max: @event.max_adult_tickets_per_request
  %span.help-inline #{number_to_currency(@event.adult_ticket_price, precision: 0)} / ticket

  - if @event.kid_ticket_price
    = f.label :kids, 'Number of children in your group (babes in arms are free)'
    %p.muted
      -# HACK: This copy is specific for Cloudwatch--we'll have to add a customization
      -# so that this can be set on a per-event basis
      The cost of tickets for kids will be dependent on how many you bring.
      Unfortunately, kids count against our limit capacity with our contract
      at the site.  As much as we would like to allow kids in for free, we
      simply cannot afford it. However, we know we start excluding families
      from attending if we charge too much for kids to attend, and so we've
      attempted to create a pricing model that is reasonable and well-balanced.
      If anyone needs further assistance, check the financial assistance
      checkbox below, and give us a brief explanation of what your needs are.
    = f.number_field :kids, class: 'input-mini', min: 0,
      max: @event.max_kid_tickets_per_request
    %span.help-inline 1 child = $75, 2 = $125, 3 = $175, 4 or more = $50 / child

  - if @event.cabin_price
    = f.label :cabins, 'How many cabins/tents did you want?'
    %p.muted
      Due to the limited number of available cabins/tents, we will not be
      able to grant all requests.
      %br
      We will contact you if this is the case.
    = f.number_field :cabins, class: 'input-mini', min: 0,
      max: @event.max_cabins_per_request
    %span.help-inline #{number_to_currency(@event.cabin_price, precision: 0)} / cabin

  = f.label :volunteer_shifts, 'How many volunteer shifts are you willing to sign up for?'
  = f.number_field :volunteer_shifts, class: 'input-mini', min: 0, required: true

  = f.label :address, 'Mailing Address'
  %p.muted We'll mail your tickets to this address
  = f.text_area :address, class: 'input-xlarge',
    rows: 3, maxlength: 150, required: true

  = f.label :needs_assistance, class: 'checkbox' do
    = f.check_box :needs_assistance
    I need financial assistance or need to arrange a payment plan
    to purchase my ticket
  %p.muted
    We never turn anyone away, and will work with you to figure
    something out.

  = f.label :notes, 'Anything else you want us to be aware of?'
  %p.muted
    For example, if you checked the box above, tell us what your needs are.
  = f.text_area :notes, class: 'input-xxlarge',
    rows: 3, maxlength: 500

  .actions
    = f.submit class: 'btn btn-primary btn-large'
